trigger:
- master

variables:
      terraformstoragerg: 'ghost-rg'
      terraformstorageaccount: 'terrastoreghost9b6f322'

stages:
- stage: Build
  jobs:
  - job: Build

    pool:
      vmImage: 'windows-latest'

    steps:
    - task: CopyFiles@2
      displayName: 'Copy Terraform Files to Staging'
      inputs:
        SourceFolder: Terraform
        TargetFolder: '$(build.artifactstagingdirectory)/Terraform'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'

- stage: Deploy
  jobs:
  - job: Deploy
    pool:
      vmImage: 'windows-latest'
    steps:

    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '0.12.3'

    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/drop/Terraform'
        backendServiceArm: 'Pay-As-You-Go (3b343b7b-7474-455c-9e1a-d83ab3fb22f6)'
        backendAzureRmResourceGroupName: '$(terraformstoragerg)'
        backendAzureRmStorageAccountName: '$(terraformstorageaccount) '
        backendAzureRmContainerName: terraform
        backendAzureRmKey: terraform.tfstate

    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/drop/Terraform'
        environmentServiceNameAzureRM: 'Pay-As-You-Go (3b343b7b-7474-455c-9e1a-d83ab3fb22f6)'
    
    - task: TerraformTaskV1@0
      inputs:
        provider: 'azurerm'
        workingDirectory: '$(System.DefaultWorkingDirectory)/drop/Terraform'
        command: 'apply'
        commandOptions: '-auto-approve'
        environmentServiceNameAzureRM: 'Pay-As-You-Go (3b343b7b-7474-455c-9e1a-d83ab3fb22f6)'





